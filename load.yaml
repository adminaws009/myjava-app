name: Update ECS Service with Load Balancer and Task Count

on:
  push:
    branches:
      - main  # Change this to your preferred branch

jobs:
  update-ecs-service:
    runs-on: ubuntu-latest

    env:
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      ECR_REPOSITORY: containers
      IMAGE_TAG: ${{ github.sha }}
      ECS_CLUSTER: food-order-app
      ECS_BACKEND_SERVICE: backend-service
      ECS_BACKEND_TASK_DEFINITION: backend_task_definition.json
      ECS_DATABASE_SERVICE: database-service
      ECS_DATABASE_TASK_DEFINITION: database_task_definition.json
      ECS_FRONTEND_SERVICE: myfoodapp
      ECS_FRONTEND_TASK_DEFINITION: frontend_task_definition.json
      CONTAINER_NAME: foodapp
      CONTAINER_PORT: 8080

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Here, you might have a step to build your Docker image if needed

      - name: Deploy Amazon ECS frontend task definition
        id: deploy-ecs-task-def
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ env.ECS_FRONTEND_TASK_DEFINITION }}
          service: arn:aws:ecs:${{ secrets.AWS_REGION }}:${{ secrets.AWS_ACCOUNT_ID }}:service/${{ env.ECS_FRONTEND_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
          force-new-deployment: true

      - name: Update ECS service with load balancer and task count
        id: update-ecs-service
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_FRONTEND_SERVICE }} --task-definition ${{ env.ECS_FRONTEND_TASK_DEFINITION }} --desired-count 2
          aws ecs create-service-registry --registry-name ${{ env.ECR_REGISTRY }} --container-name ${{ env.CONTAINER_NAME }} --container-port ${{ env.CONTAINER_PORT }}
          aws ecs create-service --cluster ${{ env.ECS_CLUSTER }} --service-name ${{ env.ECS_FRONTEND_SERVICE }} --launch-type FARGATE --desired-count 2 --task-definition ${{ env.ECS_FRONTEND_TASK_DEFINITION }} --load-balancers targetGroupArn=<TARGET_GROUP_ARN>,containerName=${{ env.CONTAINER_NAME }},containerPort=${{ env.CONTAINER_PORT }}





 
- name: Update ECS service
  id: update-ecs-service
  run: |
    # Update or create ECS service with the new task definition and load balancer
    aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} \
                           --service ${{ env.ECS_FRONTEND_SERVICE }} \
                           --task-definition ${{ steps.frontend-task-def.outputs.task-definition }} \
                           --desired-count 2 \
                           --load-balancers targetGroupArn=${{ secrets.TARGET_GROUP_ARN }},containerName=${{ env.CONTAINER_NAME }},containerPort=${{ env.CONTAINER_PORT }}
# Wait for the ECS service to become stable
    aws ecs wait services-stable --cluster ${{ secrets.ECS_CLUSTER }} --services ${{ secrets.ECS_FRONTEND_SERVICE }}
    




          
